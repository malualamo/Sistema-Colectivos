        -:    0:Source:D:/malen/Deskpot/TPI/testGrupo/construirGrillaTESTGP.cpp
        -:    0:Graph:D:\malen\Deskpot\TPI\cmake-build-debug\CMakeFiles\tpi.dir\testGrupo\construirGrillaTESTGP.gcno
        -:    0:Data:D:\malen\Deskpot\TPI\cmake-build-debug\CMakeFiles\tpi.dir\testGrupo\construirGrillaTESTGP.gcda
        -:    0:Runs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "../auxiliares.h"
        -:    3:#include "gtest/gtest.h"
        -:    4:
        -:    5:using namespace std;//
        -:    6:
function _Z14sonGPS1IgualesSt5tupleIJS_IJddEES0_S_IJiiEEEES2_ called 64 returned 100% blocks executed 100%
       64:    7:bool sonGPS1Iguales(celda c1, celda c2) {
       64:    8:    if (get<0>(get<0>(c1)) == get<0>(get<0>(c2))) {
       64:    8-block  0
call    0 returned 64
call    1 returned 64
call    2 returned 64
call    3 returned 64
branch  4 taken 16 (fallthrough)
branch  5 taken 48
       16:    9:        if (get<1>(get<0>(c1)) == get<1>(get<0>(c2))) {
       16:    9-block  0
call    0 returned 16
call    1 returned 16
call    2 returned 16
call    3 returned 16
branch  4 taken 8 (fallthrough)
branch  5 taken 8
        8:   10:            return true;
        8:   10-block  0
        -:   11:        }
        -:   12:    }
       56:   13:    return false;
       56:   13-block  0
        -:   14:}
        -:   15:
function _Z14sonGPS2IgualesSt5tupleIJS_IJddEES0_S_IJiiEEEES2_ called 8 returned 100% blocks executed 92%
        8:   16:bool sonGPS2Iguales(celda c1, celda c2) {
        8:   17:    if (get<0>(get<0>(c1)) == get<0>(get<0>(c2))) {
        8:   17-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0
        8:   18:        if (get<1>(get<0>(c1)) == get<1>(get<0>(c2))) {
        8:   18-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0
        8:   19:            return true;
        8:   19-block  0
        -:   20:        }
        -:   21:    }
    #####:   22:    return false;
    %%%%%:   22-block  0
        -:   23:}
        -:   24:
        -:   25:
function _Z17sonNombresIgualesSt5tupleIJS_IJddEES0_S_IJiiEEEES2_ called 8 returned 100% blocks executed 92%
        8:   26:bool sonNombresIguales(celda c1, celda c2){
        8:   27:    if(get<0>(get<2>(c1))==get<0>(get<2>(c2))){
        8:   27-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0
        8:   28:        if(get<1>(get<2>(c1))==get<1>(get<2>(c2))){
        8:   28-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0
        8:   29:            return true;
        8:   29-block  0
        -:   30:        }
        -:   31:    }
    #####:   32:    return false;
    %%%%%:   32-block  0
        -:   33:}
        -:   34:
function _Z17sonGrillasIgualesSt6vectorISt5tupleIJS0_IJddEES1_S0_IJiiEEEESaIS3_EES5_ called 2 returned 100% blocks executed 100%
        2:   35:bool sonGrillasIguales(grilla g1, grilla g2){
        2:   36:    int c=0;
        2:   37:    if(g1.size()==g2.size()){
        2:   37-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        9:   38:        for(int i=0; i<g1.size(); i++){
        1:   38-block  0
        8:   38-block  1
        9:   38-block  2
call    0 returned 9
branch  1 taken 8
branch  2 taken 1 (fallthrough)
       72:   39:            for(int j=0; j<g2.size(); j++){
        8:   39-block  0
       64:   39-block  1
       72:   39-block  2
call    0 returned 72
branch  1 taken 64
branch  2 taken 8 (fallthrough)
       64:   40:                if(sonGPS1Iguales(g1[i],g2[j]) && sonGPS2Iguales(g1[i],g2[j]) && sonNombresIguales(g1[i],g2[j])){
       64:   40-block  0
call    0 returned 64
call    1 returned 64
call    2 returned 64
branch  3 taken 8 (fallthrough)
branch  4 taken 56
        8:   40-block  1
call    5 returned 8
call    6 returned 8
call    7 returned 8
branch  8 taken 8 (fallthrough)
branch  9 taken 0
        8:   40-block  2
call   10 returned 8
call   11 returned 8
call   12 returned 8
branch 13 taken 8 (fallthrough)
branch 14 taken 0
        8:   40-block  3
       56:   40-block  4
       64:   40-block  5
branch 15 taken 8 (fallthrough)
branch 16 taken 56
        8:   41:                    c=c+1;
        8:   41-block  0
        -:   42:                }
        -:   43:            }
        -:   44:        }
        -:   45:    }
        2:   46:    return c==g1.size();
        2:   46-block  0
call    0 returned 2
        -:   47:}
        -:   48:
        2:   49:TEST(construirGrillaTESTGP, grillasIguales){
        -:   50:
        1:   51:    int n = 4;
        1:   52:    int m = 2;
        -:   53:
        1:   54:    gps esq1 = puntoGps(0,0);
        1:   55:    gps esq2 = puntoGps(-52,52);
        -:   56:
        1:   57:    grilla gres = {make_tuple(puntoGps(0,26), puntoGps(-13,52), make_tuple(1,2)), //estan desordenadas solo para ver si funcionaba
        1:   58:                   make_tuple(puntoGps(-13,0), puntoGps(-26,26), make_tuple(2,1)),
        1:   59:                   make_tuple(puntoGps(-39,0), puntoGps(-52,26), make_tuple(4,1)),
        1:   60:                   make_tuple(puntoGps(-13,26), puntoGps(-26,52), make_tuple(2,2)),
        1:   61:                   make_tuple(puntoGps(-26,0), puntoGps(-39,26), make_tuple(3,1)),
        1:   62:                   make_tuple(puntoGps(-26,26), puntoGps(-39,52), make_tuple(3,2)),
        1:   63:                   make_tuple(puntoGps(-39,26), puntoGps(-52,52), make_tuple(4,2)),
        1:   64:                   make_tuple(puntoGps(0,0), puntoGps(-13,26), make_tuple(1,1))
        8:   65:    };
        -:   66:
        -:   67:
        1:   68:    grilla g = construirGrilla(esq1,esq2,n,m);
        -:   69:
       1*:   70:    EXPECT_TRUE(sonGrillasIguales(gres, g));
        1:   71:}
------------------
_ZN41construirGrillaTESTGP_grillasIguales_Test8TestBodyEv:
function _ZN41construirGrillaTESTGP_grillasIguales_Test8TestBodyEv called 1 returned 100% blocks executed 30%
        1:   49:TEST(construirGrillaTESTGP, grillasIguales){
        -:   50:
        1:   51:    int n = 4;
        1:   52:    int m = 2;
        -:   53:
        1:   54:    gps esq1 = puntoGps(0,0);
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55:    gps esq2 = puntoGps(-52,52);
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   56:
        1:   57:    grilla gres = {make_tuple(puntoGps(0,26), puntoGps(-13,52), make_tuple(1,2)), //estan desordenadas solo para ver si funcionaba
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   57-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   57-block  3
    $$$$$:   57-block  4
    $$$$$:   57-block  5
    $$$$$:   57-block  6
    $$$$$:   57-block  7
        1:   58:                   make_tuple(puntoGps(-13,0), puntoGps(-26,26), make_tuple(2,1)),
        1:   58-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   58-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   58-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   58-block  3
    $$$$$:   58-block  4
    $$$$$:   58-block  5
    $$$$$:   58-block  6
    $$$$$:   58-block  7
        1:   59:                   make_tuple(puntoGps(-39,0), puntoGps(-52,26), make_tuple(4,1)),
        1:   59-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   59-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   59-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   59-block  3
    $$$$$:   59-block  4
    $$$$$:   59-block  5
    $$$$$:   59-block  6
    $$$$$:   59-block  7
        1:   60:                   make_tuple(puntoGps(-13,26), puntoGps(-26,52), make_tuple(2,2)),
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   60-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   60-block  3
    $$$$$:   60-block  4
    $$$$$:   60-block  5
    $$$$$:   60-block  6
    $$$$$:   60-block  7
        1:   61:                   make_tuple(puntoGps(-26,0), puntoGps(-39,26), make_tuple(3,1)),
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   61-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   61-block  3
    $$$$$:   61-block  4
    $$$$$:   61-block  5
    $$$$$:   61-block  6
    $$$$$:   61-block  7
        1:   62:                   make_tuple(puntoGps(-26,26), puntoGps(-39,52), make_tuple(3,2)),
        1:   62-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   62-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   62-block  3
    $$$$$:   62-block  4
    $$$$$:   62-block  5
    $$$$$:   62-block  6
    $$$$$:   62-block  7
        1:   63:                   make_tuple(puntoGps(-39,26), puntoGps(-52,52), make_tuple(4,2)),
        1:   63-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   63-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   63-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   63-block  3
    $$$$$:   63-block  4
    $$$$$:   63-block  5
    $$$$$:   63-block  6
    $$$$$:   63-block  7
        1:   64:                   make_tuple(puntoGps(0,0), puntoGps(-13,26), make_tuple(1,1))
        1:   64-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   64-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   64-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   64-block  3
    $$$$$:   64-block  4
    $$$$$:   64-block  5
    $$$$$:   64-block  6
    $$$$$:   64-block  7
        8:   65:    };
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   65-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   65-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   65-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   65-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   65-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   65-block  6
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   65-block  7
call   21 returned 1
branch 22 taken 1 (fallthrough)
branch 23 taken 0 (throw)
        1:   65-block  8
call   24 returned 1
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
    $$$$$:   65-block  9
    $$$$$:   65-block 10
        -:   66:
        -:   67:
        1:   68:    grilla g = construirGrilla(esq1,esq2,n,m);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   69:
       1*:   70:    EXPECT_TRUE(sonGrillasIguales(gres, g));
        1:   70-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   70-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   70-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   70-block  4
call   12 returned 1
call   13 returned 1
call   14 returned 1
branch 15 taken 0 (fallthrough)
branch 16 taken 1
    %%%%%:   70-block  5
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   70-block  6
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:   70-block  7
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   70-block  8
call   27 never executed
branch 28 never executed
branch 29 never executed
    %%%%%:   70-block  9
call   30 never executed
call   31 never executed
call   32 never executed
        1:   70-block 10
call   33 returned 1
    $$$$$:   70-block 11
    $$$$$:   70-block 12
    $$$$$:   70-block 13
    $$$$$:   70-block 14
call   34 never executed
    $$$$$:   70-block 15
    $$$$$:   70-block 16
call   35 never executed
    $$$$$:   70-block 17
    $$$$$:   70-block 18
call   36 never executed
    $$$$$:   70-block 19
    $$$$$:   70-block 20
call   37 never executed
        1:   71:}
call    0 returned 1
call    1 returned 1
    $$$$$:   71-block  0
call    2 never executed
    $$$$$:   71-block  1
call    3 never executed
------------------
_ZN41construirGrillaTESTGP_grillasIguales_TestC1Ev:
function _ZN41construirGrillaTESTGP_grillasIguales_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   49:TEST(construirGrillaTESTGP, grillasIguales){
        1:   49-block  0
call    0 returned 1
------------------
        -:   72:
        2:   73:TEST(construirGrillaTESTGP, grillasDistintas){
        1:   74:    int n = 4;
        1:   75:    int m = 2;
        -:   76:
        1:   77:    gps esq1 = puntoGps(0,0);
        1:   78:    gps esq2 = puntoGps(-52,52);
        -:   79:
        1:   80:    grilla gres = construirGrilla(esq1, esq2, 5, 10);
        -:   81:
        -:   82:
        1:   83:    grilla g = construirGrilla(esq1,esq2,n,m);
        -:   84:
       1*:   85:    EXPECT_FALSE(sonGrillasIguales(gres, g));
        -:   86:
        1:   87:}
------------------
_ZN43construirGrillaTESTGP_grillasDistintas_Test8TestBodyEv:
function _ZN43construirGrillaTESTGP_grillasDistintas_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:   73:TEST(construirGrillaTESTGP, grillasDistintas){
        1:   74:    int n = 4;
        1:   75:    int m = 2;
        -:   76:
        1:   77:    gps esq1 = puntoGps(0,0);
        1:   77-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   78:    gps esq2 = puntoGps(-52,52);
        1:   78-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   79:
        1:   80:    grilla gres = construirGrilla(esq1, esq2, 5, 10);
        1:   80-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   81:
        -:   82:
        1:   83:    grilla g = construirGrilla(esq1,esq2,n,m);
        1:   83-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   84:
       1*:   85:    EXPECT_FALSE(sonGrillasIguales(gres, g));
        1:   85-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   85-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   85-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   85-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   85-block  4
call   12 returned 1
call   13 returned 1
call   14 returned 1
branch 15 taken 0 (fallthrough)
branch 16 taken 1
    %%%%%:   85-block  5
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   85-block  6
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:   85-block  7
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   85-block  8
call   27 never executed
branch 28 never executed
branch 29 never executed
    %%%%%:   85-block  9
call   30 never executed
call   31 never executed
call   32 never executed
        1:   85-block 10
call   33 returned 1
    $$$$$:   85-block 11
    $$$$$:   85-block 12
    $$$$$:   85-block 13
    $$$$$:   85-block 14
call   34 never executed
    $$$$$:   85-block 15
    $$$$$:   85-block 16
call   35 never executed
    $$$$$:   85-block 17
    $$$$$:   85-block 18
call   36 never executed
    $$$$$:   85-block 19
    $$$$$:   85-block 20
call   37 never executed
        -:   86:
        1:   87:}
call    0 returned 1
call    1 returned 1
    $$$$$:   87-block  0
call    2 never executed
    $$$$$:   87-block  1
call    3 never executed
------------------
_ZN43construirGrillaTESTGP_grillasDistintas_TestC1Ev:
function _ZN43construirGrillaTESTGP_grillasDistintas_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   73:TEST(construirGrillaTESTGP, grillasDistintas){
        1:   73-block  0
call    0 returned 1
------------------
