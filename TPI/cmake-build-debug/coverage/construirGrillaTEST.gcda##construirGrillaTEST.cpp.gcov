        -:    0:Source:D:/malen/Deskpot/TPI/testEnunciado/construirGrillaTEST.cpp
        -:    0:Graph:D:\malen\Deskpot\TPI\cmake-build-debug\CMakeFiles\tpi.dir\testEnunciado\construirGrillaTEST.gcno
        -:    0:Data:D:\malen\Deskpot\TPI\cmake-build-debug\CMakeFiles\tpi.dir\testEnunciado\construirGrillaTEST.gcda
        -:    0:Runs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "../auxiliares.h"
        -:    3:#include "gtest/gtest.h"
        -:    4:
        -:    5:using namespace std;
        -:    6:
        2:    7:TEST(construirGrillaTEST, nombresCorrectosDistanciaParNParMImparArg){
        -:    8:
        1:    9:    int n = 2;
        1:   10:    int m = 3;
        -:   11:
        1:   12:    gps esq1 = puntoGps(-33.0,-58.0);
        1:   13:    gps esq2 = puntoGps(-33.9,-57.1);
        -:   14:
        1:   15:    grilla gres = {make_tuple(puntoGps(-33.0,-58.0), puntoGps(-33.45,-57.7), make_tuple(1,1)),
        1:   16:                  make_tuple(puntoGps(-33.0,-57.7), puntoGps(-33.45,-57.4), make_tuple(1,2)),
        1:   17:                  make_tuple(puntoGps(-33.0,-57.4), puntoGps(-33.45,-57.1), make_tuple(1,3)),
        1:   18:                  make_tuple(puntoGps(-33.45,-58.0), puntoGps(-33.9,-57.7), make_tuple(2,1)),
        1:   19:                  make_tuple(puntoGps(-33.45,-57.7), puntoGps(-33.9,-57.4), make_tuple(2,2)),
        1:   20:                  make_tuple(puntoGps(-33.45,-57.4), puntoGps(-33.9,-57.1), make_tuple(2,3))
        6:   21:                  };
        -:   22:
        -:   23:
        1:   24:    grilla g = construirGrilla(esq1,esq2,n,m);
        -:   25:
       1*:   26:    EXPECT_EQ(n*m, g.size());
        1:   27:}
------------------
_ZN66construirGrillaTEST_nombresCorrectosDistanciaParNParMImparArg_Test8TestBodyEv:
function _ZN66construirGrillaTEST_nombresCorrectosDistanciaParNParMImparArg_Test8TestBodyEv called 1 returned 100% blocks executed 30%
        1:    7:TEST(construirGrillaTEST, nombresCorrectosDistanciaParNParMImparArg){
        -:    8:
        1:    9:    int n = 2;
        1:   10:    int m = 3;
        -:   11:
        1:   12:    gps esq1 = puntoGps(-33.0,-58.0);
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   13:    gps esq2 = puntoGps(-33.9,-57.1);
        1:   13-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   14:
        1:   15:    grilla gres = {make_tuple(puntoGps(-33.0,-58.0), puntoGps(-33.45,-57.7), make_tuple(1,1)),
        1:   15-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   15-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   15-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   15-block  3
    $$$$$:   15-block  4
    $$$$$:   15-block  5
    $$$$$:   15-block  6
    $$$$$:   15-block  7
        1:   16:                  make_tuple(puntoGps(-33.0,-57.7), puntoGps(-33.45,-57.4), make_tuple(1,2)),
        1:   16-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   16-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   16-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   16-block  3
    $$$$$:   16-block  4
    $$$$$:   16-block  5
    $$$$$:   16-block  6
    $$$$$:   16-block  7
        1:   17:                  make_tuple(puntoGps(-33.0,-57.4), puntoGps(-33.45,-57.1), make_tuple(1,3)),
        1:   17-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   17-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   17-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   17-block  3
    $$$$$:   17-block  4
    $$$$$:   17-block  5
    $$$$$:   17-block  6
    $$$$$:   17-block  7
        1:   18:                  make_tuple(puntoGps(-33.45,-58.0), puntoGps(-33.9,-57.7), make_tuple(2,1)),
        1:   18-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   18-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   18-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   18-block  3
    $$$$$:   18-block  4
    $$$$$:   18-block  5
    $$$$$:   18-block  6
    $$$$$:   18-block  7
        1:   19:                  make_tuple(puntoGps(-33.45,-57.7), puntoGps(-33.9,-57.4), make_tuple(2,2)),
        1:   19-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   19-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   19-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   19-block  3
    $$$$$:   19-block  4
    $$$$$:   19-block  5
    $$$$$:   19-block  6
    $$$$$:   19-block  7
        1:   20:                  make_tuple(puntoGps(-33.45,-57.4), puntoGps(-33.9,-57.1), make_tuple(2,3))
        1:   20-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   20-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   20-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   20-block  3
    $$$$$:   20-block  4
    $$$$$:   20-block  5
    $$$$$:   20-block  6
    $$$$$:   20-block  7
        6:   21:                  };
        1:   21-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   21-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   21-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   21-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   21-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   21-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   21-block  6
call   18 returned 1
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
    $$$$$:   21-block  7
    $$$$$:   21-block  8
        -:   22:
        -:   23:
        1:   24:    grilla g = construirGrilla(esq1,esq2,n,m);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   25:
       1*:   26:    EXPECT_EQ(n*m, g.size());
        1:   26-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   26-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   26-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:   26-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:   26-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   26-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   26-block  6
call   19 never executed
call   20 never executed
        1:   26-block  7
call   21 returned 1
    $$$$$:   26-block  8
    $$$$$:   26-block  9
    $$$$$:   26-block 10
call   22 never executed
    $$$$$:   26-block 11
    $$$$$:   26-block 12
call   23 never executed
    $$$$$:   26-block 13
    $$$$$:   26-block 14
call   24 never executed
        1:   27:}
call    0 returned 1
call    1 returned 1
    $$$$$:   27-block  0
call    2 never executed
    $$$$$:   27-block  1
call    3 never executed
------------------
_ZN66construirGrillaTEST_nombresCorrectosDistanciaParNParMImparArg_TestC1Ev:
function _ZN66construirGrillaTEST_nombresCorrectosDistanciaParNParMImparArg_TestC1Ev called 1 returned 100% blocks executed 100%
        1:    7:TEST(construirGrillaTEST, nombresCorrectosDistanciaParNParMImparArg){
        1:    7-block  0
call    0 returned 1
------------------
